CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12.2)

PROJECT(SNAKE)

SET(SNAKE_MAJOR_VERSION 4)
SET(SNAKE_MINOR_VERSION 1)
SET(
    SANKE_VERSION
    ${SNAKE_MAJOR_VERSION}.${SNAKE_MINOR_VERSION}
)

#ADD_SUBDIRECTORY(include)

LIST(APPEND CMAKE_CXX_FLAGS "-std=c++11 -Wall -O3")

#Detect packages
SET (CURSES_NEED_NCURSES TRUE)
FIND_PACKAGE(CURSES REQUIRED)

IF(CURSES_FOUND)
    MESSAGE("Ncurses: yes")
ELSE(CURSES_FOUND)
    MESSAGE("Ncurses: no")
ENDIF(CURSES_FOUND)

INCLUDE_DIRECTORIES(${CURSES_INCLUDE_DIR})
LIST(APPEND SNAKE_LIBRARIES ${CURSES_LIBRARIES})

INCLUDE_DIRECTORIES(include/*.h)
FILE(GLOB_RECURSE SNAKE_SOURCE source/*.cpp)

#Compile to static library
#ADD_LIBRARY(snake STATIC ${SNAKE_SOURCE})

#Compile to executable
ADD_EXECUTABLE(snake ${SNAKE_SOURCE})

TARGET_LINK_LIBRARIES(snake ${SNAKE_LIBRARIES})
SET_TARGET_PROPERTIES(snake PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})

###################################################################################
#CONFIGURE_FILE(
#    CMake/PCMCconfigTemplate.cmake
#    "${CMAKE_CURRENT_BINARY_DIR}/CMake/PCMCConfig.cmake"
#    COPYONLY
#)
# Installation
INSTALL(
    TARGETS snake
    DESTINATION lib/PCMC
#    ARCHIVE DESTINATION lib/PCMC
)

#SET(ConfigPackageLocation lib/PCMC/CMake)
#INSTALL(
#    FILES ${CMAKE_CURRENT_BINARY_DIR}/CMake/PCMCConfig.cmake 
    #"${CMAKE_CURRENT_BINARY_DIR}/CMake/TBTKVersion.cmake"
#    DESTINATION ${ConfigPackageLocation}
#    COMPONENT Devel
#)
#MESSAGE(${CMAKE_INSTALL_PREFIX})